/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int find(TreeNode* root, int &res){
        if(root == NULL)    return 0;
        int left1 = find(root->left, res);
        int right1 = find(root->right, res);
        
        int max_s = max(max(left1, right1) + root->val, root->val);
        int top = max(max_s, left1 + right1 + root->val);
        res = max(res, top);
        return max_s;
    }
    int maxPathSum(TreeNode* root) {
        int res = INT_MIN;
        int j = find(root, res);
        return res;
    }
};

static auto _ = [] { std::ios::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0); std::cerr.tie(0); return 0; } ();