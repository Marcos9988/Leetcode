/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidSequence(TreeNode* root, vector<int> arr) {        
        if(root==NULL) return false;
        if(arr.empty()) return false;
        if(root->val != arr[0]) return false;
        arr.erase(arr.begin());
        if(root->left == NULL && root->right == NULL  && arr.size()==0) return true;
        return (isValidSequence(root->left,arr) || isValidSequence(root->right,arr));
    }
};


static auto _ = [] { std::ios::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0); std::cerr.tie(0); return 0; } ();